---
resources:
- name: git_stack-pulumi
  type: git
  icon: git
  source:
    uri: ((stack_git_repository))
    branch: ((stack_git_branch))
{% if scs_cred_type == "ssh" %}
    private_key: ((stack_git_private_key))
{% else %}
    username: ((stack_git_username))
    password: ((stack_git_token))
{% endif %}
    paths:
      - ((stack_pulumi_path))/*

jobs:
- name: pulumi-preview
  plan:
  - get: git_stack-pulumi
  - task: pulumi-preview
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: pulumi/pulumi-nodejs
          tag: latest
      run:
        path: /bin/bash
        args:
        - '-c'
        - |
          set -euxo pipefail

          echo "Clean install the Pulumi project"
          cd ${PULUMI_CODE_PATH}
          npm ci

          echo "Check pulumi version that will be used"
          pulumi version

          echo "Login to pulumi cloud"
          export PULUMI_ACCESS_TOKEN=${PULUMI_ACCESS_TOKEN:?You need to provide a pulumi access token}
          pulumi login

          echo "Setting stack"
          pulumi stack ls
          pulumi stack select ${PULUMI_STACK} --non-interactive

          echo "Setting pulumi config"
          pulumi config set "${PULUMI_PROJECT}:sa_name" "${SA_NAME}"
          pulumi config set "${PULUMI_PROJECT}:rg_name" "${RG_NAME}"

          echo "Starting pulumi preview"
          pulumi preview --refresh --diff
      inputs:
        - name: git_stack-pulumi
    params:
      ARM_CLIENT_ID: ((azure.client_id))
      ARM_CLIENT_SECRET: ((azure.client_secret))
      ARM_SUBSCRIPTION_ID: ((azure.subscription_id))
      ARM_TENANT_ID: ((azure.tenant_id))
      PULUMI_CODE_PATH: "git_stack-pulumi/((stack_pulumi_path))"
      PULUMI_ACCESS_TOKEN: ((pulumi_token))
      PULUMI_PROJECT: ((pulumi_project))
      PULUMI_STACK: ((pulumi_stack))
      SA_NAME: ((sa_name))
      RG_NAME: ((rg_name))

- name: pulumi-up
  plan:
  - get: git_stack-pulumi
  - task: pulumi-preview
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: pulumi/pulumi-nodejs
          tag: latest
      run:
        path: /bin/bash
        args:
        - '-c'
        - |
          set -euxo pipefail

          echo "Clean install the Pulumi project"
          cd ${PULUMI_CODE_PATH}
          npm ci

          echo "Check pulumi version that will be used"
          pulumi version

          echo "Login to pulumi cloud"
          export PULUMI_ACCESS_TOKEN=${PULUMI_ACCESS_TOKEN:?You need to provide a pulumi access token}
          pulumi login

          echo "Setting stack"
          pulumi stack ls
          pulumi stack select ${PULUMI_STACK} --non-interactive

          echo "Setting pulumi config"
          pulumi config set "${PULUMI_PROJECT}:sa_name" "${SA_NAME}"
          pulumi config set "${PULUMI_PROJECT}:rg_name" "${RG_NAME}"

          echo "Starting pulumi up"
          pulumi up -r -y --diff 
      inputs:
        - name: git_stack-pulumi
    params:
      ARM_CLIENT_ID: ((azure.client_id))
      ARM_CLIENT_SECRET: ((azure.client_secret))
      ARM_SUBSCRIPTION_ID: ((azure.subscription_id))
      ARM_TENANT_ID: ((azure.tenant_id))
      PULUMI_CODE_PATH: "git_stack-pulumi/((stack_pulumi_path))"
      PULUMI_ACCESS_TOKEN: ((pulumi_token))
      PULUMI_PROJECT: ((pulumi_project))
      PULUMI_STACK: ((pulumi_stack))
      SA_NAME: ((sa_name))
      RG_NAME: ((rg_name))

- name: pulumi-destroy
  plan:
  - get: git_stack-pulumi
  - task: pulumi-preview
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: pulumi/pulumi-nodejs
          tag: latest
      run:
        path: /bin/bash
        args:
        - '-c'
        - |
          set -euxo pipefail

          echo "Clean install the Pulumi project"
          cd ${PULUMI_CODE_PATH}
          npm ci

          echo "Check pulumi version that will be used"
          pulumi version

          echo "Login to pulumi cloud"
          export PULUMI_ACCESS_TOKEN=${PULUMI_ACCESS_TOKEN:?You need to provide a pulumi access token}
          pulumi login

          echo "Setting stack"
          pulumi stack ls
          pulumi stack select ${PULUMI_STACK} --non-interactive

          echo "Setting pulumi config"
          pulumi config set "${PULUMI_PROJECT}:sa_name" "${SA_NAME}"
          pulumi config set "${PULUMI_PROJECT}:rg_name" "${RG_NAME}"

          echo "Starting pulumi destroy"
          pulumi destroy -r -y
      inputs:
        - name: git_stack-pulumi
    params:
      ARM_CLIENT_ID: ((azure.client_id))
      ARM_CLIENT_SECRET: ((azure.client_secret))
      ARM_SUBSCRIPTION_ID: ((azure.subscription_id))
      ARM_TENANT_ID: ((azure.tenant_id))
      PULUMI_CODE_PATH: "git_stack-pulumi/((stack_pulumi_path))"
      PULUMI_ACCESS_TOKEN: ((pulumi_token))
      PULUMI_PROJECT: ((pulumi_project))
      PULUMI_STACK: ((pulumi_stack))
      SA_NAME: ((sa_name))
      RG_NAME: ((rg_name))
