---
version: "2"
use_cases:
- name: 'default'
  sections:
  - name: Nexus Repository
    groups:
    - name: Kubernetes Cluster
      technologies: [pipeline]
      vars:
      - name: "Kubeconfig"
        description: "Kubeconfig to access your K8s cluster. Please create it as a custom credential in Cycloid Credentials module beforehand."
        key: kubeconfig
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - custom
        type: string
        default: ""
        required: true
    - name: Pod specifications
      technologies: [terraform]
      vars:
      - name: "Disk size"
        unit: Go
        description: "Disk size for the Nexus Repository."
        key: vm_disk_size
        widget: slider_range
        type: integer
        default: 20
        values:
            - 10
            - 250
        required: true
    - name: Application Configuration
      technologies: [terraform]
      vars:
      - name: "Port"
        description: "Port where Nexus Repository service is exposed."
        key: nexus_port
        widget: simple_text
        type: string
        default: "8081"
        required: true





  sections:
  - name: Nexus Repository
    groups:
    - name: Virtual machine specifications
      technologies: [terraform]
      vars:
{%- if stack_usecase == "aws" %}
      - name: "Instance type"
        description: "Instance type for the VM."
        key: vm_instance_type
        widget: slider_list
        type: string
        default: "t3a.medium"
        values:
            - "t3a.medium"
            - "t3a.large"
            - "t3a.xlarge"
        required: true
{%- elif stack_usecase == "azure" %}
      - name: "Instance type"
        description: "Instance type for the VM."
        key: vm_instance_type
        widget: slider_list
        type: string
        default: "Standard_DS2_v2"
        values:
            - "Standard_DS1_v2"
            - "Standard_DS2_v2"
            - "Standard_DS3_v2"
        required: true
{%- elif stack_usecase == "gcp" %}
      - name: "Machine type"
        description: "Machine type for the VM."
        key: vm_machine_type
        widget: slider_list
        type: string
        default: "n2-standard-2"
        values:
            - n2-standard-2
            - n2d-standard-2
            - n2d-standard-4
        required: true
{%- endif %}
      - name: "Disk size"
        unit: Go
        description: "Disk size for the Nexus Repository."
        key: vm_disk_size
        widget: slider_range
        type: integer
        default: 30
        values:
            - 30
            - 250
        required: true
    - name: SSH Key pair for new instances
      technologies: [pipeline]
      vars:
      - name: "SSH Public key"
        description: "The public SSH key to connect via SSH to execute the Ansible playbook"
        key: key_pair_public
        widget: cy_cred
        type: string
        default: ((key_pair.public_key))
        required: true
      - name: "SSH Private key"
        description: "The private SSH key to connect via SSH to execute the Ansible playbook"
        key: key_pair_private
        widget: cy_cred
        type: string
        default: ((key_pair.private_key))
        required: true
{%- if stack_usecase == "aws" %}
    - name: Networking
      technologies: [terraform]
      vars:
      - name: "Create VPC"
        description: "Whether to create a VPC and subnets or not."
        key: create_network
        widget: switch
        type: boolean
        default: true
    - name: Network Configuration
      technologies: [terraform]
      condition: '$create_network == false'
      vars:
      - name: "Public Subnet ID"
        description: "Public subnet ID where to deploy the EC2 instance. Must belong to the region stated below in this form."
        key: subnet_id
        widget: simple_text
        type: string
        default: ""
        required: true
{%- endif %}
    - name: Application Configuration
      technologies: [terraform]
      vars:
      - name: "Port"
        description: "Port where Nexus Repository service is exposed."
        key: nexus_port
        widget: simple_text
        type: string
        default: "8081"
        required: true
      - name: "Admin password"
        description: "Initial admin password for Nexus Repository first installation."
        key: nexus_admin_password
        widget: simple_text
        type: string
        default: "changeme"
        required: true

{%- if stack_usecase == "aws" %}
    - name: AWS Access Configuration
      technologies: [pipeline]
      vars:
      - name: "AWS access key"
        description: "AWS access key for Terraform."
        key: aws_access_key
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - aws
        type: string
        default: "((aws.access_key))"
        required: true
      - name: "AWS secret key"
        description: "AWS secret key for Terraform."
        key: aws_secret_key
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - aws
        type: string
        default: "((aws.secret_key))"
        required: true
      - name: "AWS region"
        description: "AWS region to use for Terraform."
        key: aws_region
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-regions.json
        default: eu-west-1
        required: true
{%- elif stack_usecase == "azure" %}
    - name: Azure Access Configuration
      technologies: [pipeline]
      vars:
      - name: "Azure subscription ID"
        description: "Azure subscription ID."
        key: azure_subscription_id
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - azure
        type: string
        default: "((azure_terraform.subscription_id))"
        required: true
      - name: "Azure tenant ID"
        description: "Azure tenant ID."
        key: azure_tenant_id
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - azure
        type: string
        default: "((azure_terraform.tenant_id))"
        required: true
      - name: "Azure client ID"
        description: "Azure client ID."
        key: azure_client_id
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - azure
        type: string
        default: "((azure_terraform.client_id))"
        required: true
      - name: "Azure client secret"
        description: "Azure client secret."
        key: azure_client_secret
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - azure
        type: string
        default: "((azure_terraform.client_secret))"
        required: true
    - name: Azure Infrastructure
      technologies: [terraform]
      vars:
      - name: "Azure location"
        description: "Azure location for Terraform."
        key: azure_location
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/azure-locations.json
        default: "West Europe"
        required: true
      - name: "Existing resource group name"
        description: "The name of the existing resource group where the resources will be deployed."
        key: rg_name
        widget: simple_text
        type: string
        default: ""
        required: true
{%- elif stack_usecase == "gcp" %}
    - name: GCP Access Configuration
      technologies: [pipeline]
      vars:
      - name: "GCP credentials"
        description: "Google Cloud Platform JSON credentials to use for Terraform."
        key: gcp_credentials_json
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - gcp
        type: string
        default: "((gcp.json_key))"
        required: true
      - name: "GCP project"
        description: "Google Cloud Platform project ID for Terraform."
        key: gcp_project
        widget: simple_text
        type: string
        default: ""
        required: true
      - name: "GCP region"
        description: "Google Cloud Platform region to use for Terraform."
        key: gcp_region
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/gcp-regions.json
        required: true
      - name: "GCP zone"
        description: "Google Cloud Platform zone to use for Terraform."
        key: gcp_zone
        widget: auto_complete
        type: string
        values:
          options:
            - condition: "$gcp_region == 'asia-east1'"
              values: ['asia-east1-a', 'asia-east1-b', 'asia-east1-c']
            - condition: "$gcp_region == 'asia-east2'"
              values: ['asia-east2-a', 'asia-east2-b', 'asia-east2-c']
            - condition: "$gcp_region == 'asia-northeast1'"
              values: ['asia-northeast1-a', 'asia-northeast1-b', 'asia-northeast1-c']
            - condition: "$gcp_region == 'asia-northeast2'"
              values: ['asia-northeast2-a', 'asia-northeast2-b', 'asia-northeast2-c']
            - condition: "$gcp_region == 'asia-northeast3'"
              values: ['asia-northeast3-a', 'asia-northeast3-b', 'asia-northeast3-c']
            - condition: "$gcp_region == 'asia-south1'"
              values: ['asia-south1-a', 'asia-south1-b', 'asia-south1-c']
            - condition: "$gcp_region == 'asia-south2'"
              values: ['asia-south2-a', 'asia-south2-b', 'asia-south2-c']
            - condition: "$gcp_region == 'asia-southeast1'"
              values: ['asia-southeast1-a', 'asia-southeast1-b', 'asia-southeast1-c']
            - condition: "$gcp_region == 'asia-southeast2'"
              values: ['asia-southeast2-a', 'asia-southeast2-b', 'asia-southeast2-c']
            - condition: "$gcp_region == 'australia-southeast1'"
              values: ['australia-southeast1-a', 'australia-southeast1-b', 'australia-southeast1-c']
            - condition: "$gcp_region == 'australia-southeast2'"
              values: ['australia-southeast2-a', 'australia-southeast2-b', 'australia-southeast2-c']
            - condition: "$gcp_region == 'europe-central2'"
              values: ['europe-central2-a', 'europe-central2-b', 'europe-central2-c']
            - condition: "$gcp_region == 'europe-north1'"
              values: ['europe-north1-a', 'europe-north1-b', 'europe-north1-c']
            - condition: "$gcp_region == 'europe-west1'"
              values: ['europe-west1-b', 'europe-west1-c', 'europe-west1-d']
            - condition: "$gcp_region == 'europe-west2'"
              values: ['europe-west2-a', 'europe-west2-b', 'europe-west2-c']
            - condition: "$gcp_region == 'europe-west3'"
              values: ['europe-west3-a', 'europe-west3-b', 'europe-west3-c']
            - condition: "$gcp_region == 'europe-west4'"
              values: ['europe-west4-a', 'europe-west4-b', 'europe-west4-c']
            - condition: "$gcp_region == 'europe-west6'"
              values: ['europe-west6-a', 'europe-west6-b', 'europe-west6-c']
            - condition: "$gcp_region == 'northamerica-northeast1'"
              values: ['northamerica-northeast1-a', 'northamerica-northeast1-b', 'northamerica-northeast1-c']
            - condition: "$gcp_region == 'northamerica-east1'"
              values: ['northamerica-east1-a', 'northamerica-east1-b', 'northamerica-east1-c']
            - condition: "$gcp_region == 'southamerica-east1'"
              values: ['southamerica-east1-a', 'southamerica-east1-b', 'southamerica-east1-c']
            - condition: "$gcp_region == 'us-central1'"
              values: ['us-central1-a', 'us-central1-b', 'us-central1-c', 'us-central1-f']
            - condition: "$gcp_region == 'us-east1'"
              values: ['us-east1-b', 'us-east1-c', 'us-east1-d']
            - condition: "$gcp_region == 'us-east4'"
              values: ['us-east4-a', 'us-east4-b', 'us-east4-c']
            - condition: "$gcp_region == 'us-west1'"
              values: ['us-west1-a', 'us-west1-b', 'us-west1-c']
            - condition: "$gcp_region == 'us-west2'"
              values: ['us-west2-a', 'us-west2-b', 'us-west2-c']
            - condition: "$gcp_region == 'us-west3'"
              values: ['us-west3-a', 'us-west3-b', 'us-west3-c']
            - condition: "$gcp_region == 'us-west4'"
              values: ['us-west4-a', 'us-west4-b', 'us-west4-c']
        required: true
{%- endif %}