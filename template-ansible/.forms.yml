---
version: "2"
use_cases:
- name: {{ stack_usecase }}
  sections:
  - name: Hosts
    groups:
($>- if eq .stack_usecase "aws" <$)
    - name: AWS Dynamic Inventory Configuration
      technologies: [pipeline]
      vars:
      - name: "AWS access key"
        description: "AWS access key for Terraform."
        key: aws_access_key
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - aws
        type: string
        default: ""
        required: true
      - name: "AWS secret key"
        description: "AWS secret key for Terraform."
        key: aws_secret_key
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - aws
        type: string
        default: ""
        required: true
      - name: "AWS region"
        description: "AWS region where targeted EC2 are deployed."
        key: aws_region
        type: string
        widget: auto_complete
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-regions.json
        default: eu-west-1
        required: true
($>- else if eq .stack_usecase "azure" <$)
    - name: Azure Dynamic Inventory Configuration
      technologies: [pipeline]
      vars:
      - name: "Azure subscription ID"
        description: "Azure subscription ID for Terraform."
        key: azure_subscription_id
        widget: cy_cred
        type: string
        default: ""
        required: true
      - name: "Azure tenant ID"
        description: "Azure tenant ID for Terraform."
        key: azure_tenant_id
        widget: cy_cred
        type: string
        default: ""
        required: true
      - name: "Azure client ID"
        description: "Azure client ID for Terraform."
        key: azure_client_id
        widget: cy_cred
        type: string
        default: ""
        required: true
      - name: "Azure client secret"
        description: "Azure client secret for Terraform."
        key: azure_client_secret
        widget: cy_cred
        type: string
        default: ""
        required: true
($>- else if eq .stack_usecase "gcp" <$)
    - name: GCP Dynamic Inventory Configuration
      technologies: [pipeline]
      vars:
      - name: "GCP credentials"
        description: "Google Cloud Platform JSON credentials to use for Terraform."
        key: gcp_credentials_json
        type: string
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - gcp
        default: ""
        required: true
{%- elif stack_usecase == "cai" %}
    - name: Cycloid Asset Inventory Configuration
      technologies: [pipeline]
      vars:
      - name: "Virtual Machine"
        description: "Select the Virtual Machine to target"
        key: cai_host
        type: string
        widget: cy_inventory_resource
        widget_config:
          attribute: id
          filters:
            type: aws_instance
        default: ""
        required: true
{%- elif stack_usecase == "static" %}
    - name: Static Inventory Configuration
      technologies: [pipeline]
      vars:
      - name: "Static Inventory"
        description: "A comma-separated list of FQDN or IP addresses to be passed to the ansible-playbook --inventory parameter (we will add the final comma for you)."
        key: static_inventory
        type: string
        widget: simple_text
        default: 127.0.0.1
        required: true
($>- end <$)
    - name: Inventory Targeting
      technologies: [pipeline]
      vars:
      - name: "Hosts Inventory"
{%- if stack_usecase == "static" %}
        description: "An Ansible Hosts pattern that should normally be 'all' to target all hosts in your inventory above."
{%- else %}
        description: "An Ansible Hosts pattern to target hosts in your dynamic inventory using resource tags. For example, to target all the instances tagged with role=fe AND env=prod, you would enter here: tag_role_fe:&tag_env_prod"
($>- end <$)
        key: hosts_inventory
        type: string
        widget: simple_text
{%- if stack_usecase == "static" %}
        default: "all"
{%- else %}
        default: "tag_project_($ project $):&tag_env_($ env $)"
($>- end <$)
        required: true
    - name: Hosts Connectivity
      technologies: [pipeline]
      vars:
      - name: "Hosts Username"
        description: "The username to connect to via SSH to execute the Ansible playbook"
        key: hosts_username
        type: string
        widget: simple_text
        default: "admin"
        required: true
      - name: "SSH Private key"
        description: "The private SSH key to connect via SSH to execute the Ansible playbook. The Cycloid workers shall be able to connect to targeted hosts via a public IP address."
        key: hosts_private_key
        type: string
        widget: cy_cred
        default: ((key_pair.private_key))
        required: true
    - name: Operations
      technologies: [pipeline]
      vars:
      - name: "Reboot All"
        description: "Reboot all the targeted hosts."
        key: hosts_reboot
        type: boolean
        widget: switch
        default: false
      - name: "Service to Restart"
        description: "A single service to restart on a Linux machine. Supported init systems include BSD init, OpenRC, SysV, Solaris SMF, systemd, upstart."
        key: hosts_service
        type: string
        widget: simple_text
      - name: "Package to Install"
        description: "A single package to install or upgrade on a Debian or Ubuntu OS."
        key: hosts_package
        type: string
        widget: simple_text
      - name: "User to Create"
        description: "A single user to create."
        key: hosts_user
        type: string
        widget: simple_text