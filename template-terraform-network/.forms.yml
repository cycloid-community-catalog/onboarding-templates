---
version: "2"
use_cases:
- name: {{ stack_usecase }}
  sections:
  - name: Network
    groups:
    - name: Network Configuration
      technologies: [terraform]
      vars:
{%- if stack_usecase == "aws" %}
      - name: "VPC CIDR"
        description: "The CIDR of the VPC to create."
        key: vpc_cidr
        widget: simple_text
        type: string
        default: "10.0.0.0/16"
        validations: 
        - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$" 
          error_message: "Please enter a valid CIDR such as 10.0.0.0/16"
        required: true
      - name: "Public Subnet CIDR"
        description: "The CIDR of the public subnet."
        key: vpc_public_subnet
        widget: simple_text
        type: string
        default: "10.0.0.0/24"
        validations: 
        - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$" 
          error_message: "Please enter a valid CIDR such as 10.0.0.0/24"
        required: true
      - name: "Private Subnet CIDR"
        description: "The CIDR of the private subnet."
        key: vpc_private_subnet
        widget: simple_text
        type: string
        default: "10.0.1.0/24"
        validations: 
        - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$" 
          error_message: "Please enter a valid CIDR such as 10.0.0.0/24"
        required: true
{%- elif stack_usecase == "azure" %}
      - name: "Virtual Network CIDR"
        description: "The CIDR of the Virtual Network to create."
        key: network_cidr
        widget: simple_text
        type: string
        default: "10.0.0.0/16"
        validations: 
        - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$" 
          error_message: "Please enter a valid CIDR such as 10.0.0.0/16"
        required: true
      - name: "Subnet CIDR"
        description: "The CIDR of the Subnet."
        key: subnet_cidr
        widget: simple_text
        type: string
        default: "10.0.0.0/24"
        validations: 
        - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$" 
          error_message: "Please enter a valid CIDR such as 10.0.0.0/24"
        required: true
{%- elif stack_usecase == "gcp" %}
      - name: "Subnet CIDR"
        description: "The CIDR of the Subnet."
        key: subnet_cidr
        widget: simple_text
        type: string
        default: "10.0.0.0/24"
        validations: 
        - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$" 
          error_message: "Please enter a valid CIDR such as 10.0.0.0/24"
        required: true
{%- endif %}

{%- if stack_usecase == "aws" %}
    - name: AWS Access Configuration
      technologies: [pipeline]
      vars:
      - name: "AWS account"
        description: "The AWS account where to deploy the infrastructure. It contains access key and secret key."
        key: aws_cred
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - aws
        type: string
        default: "((aws))"
        required: true
      - name: "Amazon AWS region"
        description: "Amazon AWS region to use for Terraform."
        key: aws_region
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-regions.json
        default: eu-west-1
        validations: 
        - regexp: "^[a-z]{2}-[a-z]+-\d+$" 
          error_message: "Please enter a valid AWS region such as us-east-1"
        required: true
{%- elif stack_usecase == "azure" %}
    - name: Azure Access Configuration
      technologies: [pipeline]
      vars:
      - name: "Azure credentials"
        description: "The azure credential used to deploy the infrastructure. It contains subscription_id, tenant_id, client_id, and client_secret."
        key: azure_cred
        widget: cy_cred
        widget_config:
          display_keys: false
          cred_types:
            - azure
        type: string
        default: "((azure))"
        required: true
    - name: Azure Infrastructure
      technologies: [terraform]
      vars:
      - name: "Azure location"
        description: "Azure location where to create Resource Group and Networking resources."
        key: azure_location
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/azure-locations.json
        default: "West Europe"
        required: true
      - name: "Resource group name"
        description: "The name of the resource group to create in the location mentionned above. The Networking resources will be created in this Resource Group."
        key: rg_name
        widget: simple_text
        type: string
        default: "cycloid"
        validations: 
        - regexp: "^[A-Za-z0-9_-]+$"
          error_message: "Please enter a valid Azure Resource Group such as MyResourceGroup"
        required: true
{%- elif stack_usecase == "gcp" %}
    - name: GCP Access Configuration
      technologies: [pipeline]
      vars:
      - name: "GCP credentials"
        description: "Google Cloud Platform JSON credentials to use for Terraform."
        key: gcp_credentials_json
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - gcp
        type: string
        default: "((gcp.json_key))"
        required: true
      - name: "GCP project"
        description: "Google Cloud Platform project ID for Terraform."
        key: gcp_project
        widget: simple_text
        type: string
        default: ""
        validations: 
        - regexp: "^[a-z]{1}[a-z0-9-]{5,29}$"
          error_message: "Please enter a valid GCP Project ID. It must be 6 to 30 lowercase letters, digits, or hyphens. It must start with a letter."
        required: true
      - name: "GCP region"
        description: "Google Cloud Platform region to use for Terraform."
        key: gcp_region
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/gcp-regions.json
        default: ""
        validations: 
        - regexp: "^[a-z]+-[a-z0-9]+$"
          error_message: "Please enter a valid GCP Region such as europe-west1."
        required: true
      - name: "GCP zone"
        description: "Google Cloud Platform zone to use for Terraform."
        key: gcp_zone
        widget: auto_complete
        type: string
        values:
          options:
            - condition: "$gcp_region == 'asia-east1'"
              values: ['asia-east1-a', 'asia-east1-b', 'asia-east1-c']
            - condition: "$gcp_region == 'asia-east2'"
              values: ['asia-east2-a', 'asia-east2-b', 'asia-east2-c']
            - condition: "$gcp_region == 'asia-northeast1'"
              values: ['asia-northeast1-a', 'asia-northeast1-b', 'asia-northeast1-c']
            - condition: "$gcp_region == 'asia-northeast2'"
              values: ['asia-northeast2-a', 'asia-northeast2-b', 'asia-northeast2-c']
            - condition: "$gcp_region == 'asia-northeast3'"
              values: ['asia-northeast3-a', 'asia-northeast3-b', 'asia-northeast3-c']
            - condition: "$gcp_region == 'asia-south1'"
              values: ['asia-south1-a', 'asia-south1-b', 'asia-south1-c']
            - condition: "$gcp_region == 'asia-south2'"
              values: ['asia-south2-a', 'asia-south2-b', 'asia-south2-c']
            - condition: "$gcp_region == 'asia-southeast1'"
              values: ['asia-southeast1-a', 'asia-southeast1-b', 'asia-southeast1-c']
            - condition: "$gcp_region == 'asia-southeast2'"
              values: ['asia-southeast2-a', 'asia-southeast2-b', 'asia-southeast2-c']
            - condition: "$gcp_region == 'australia-southeast1'"
              values: ['australia-southeast1-a', 'australia-southeast1-b', 'australia-southeast1-c']
            - condition: "$gcp_region == 'australia-southeast2'"
              values: ['australia-southeast2-a', 'australia-southeast2-b', 'australia-southeast2-c']
            - condition: "$gcp_region == 'europe-central2'"
              values: ['europe-central2-a', 'europe-central2-b', 'europe-central2-c']
            - condition: "$gcp_region == 'europe-north1'"
              values: ['europe-north1-a', 'europe-north1-b', 'europe-north1-c']
            - condition: "$gcp_region == 'europe-west1'"
              values: ['europe-west1-b', 'europe-west1-c', 'europe-west1-d']
            - condition: "$gcp_region == 'europe-west2'"
              values: ['europe-west2-a', 'europe-west2-b', 'europe-west2-c']
            - condition: "$gcp_region == 'europe-west3'"
              values: ['europe-west3-a', 'europe-west3-b', 'europe-west3-c']
            - condition: "$gcp_region == 'europe-west4'"
              values: ['europe-west4-a', 'europe-west4-b', 'europe-west4-c']
            - condition: "$gcp_region == 'europe-west6'"
              values: ['europe-west6-a', 'europe-west6-b', 'europe-west6-c']
            - condition: "$gcp_region == 'northamerica-northeast1'"
              values: ['northamerica-northeast1-a', 'northamerica-northeast1-b', 'northamerica-northeast1-c']
            - condition: "$gcp_region == 'northamerica-east1'"
              values: ['northamerica-east1-a', 'northamerica-east1-b', 'northamerica-east1-c']
            - condition: "$gcp_region == 'southamerica-east1'"
              values: ['southamerica-east1-a', 'southamerica-east1-b', 'southamerica-east1-c']
            - condition: "$gcp_region == 'us-central1'"
              values: ['us-central1-a', 'us-central1-b', 'us-central1-c', 'us-central1-f']
            - condition: "$gcp_region == 'us-east1'"
              values: ['us-east1-b', 'us-east1-c', 'us-east1-d']
            - condition: "$gcp_region == 'us-east4'"
              values: ['us-east4-a', 'us-east4-b', 'us-east4-c']
            - condition: "$gcp_region == 'us-west1'"
              values: ['us-west1-a', 'us-west1-b', 'us-west1-c']
            - condition: "$gcp_region == 'us-west2'"
              values: ['us-west2-a', 'us-west2-b', 'us-west2-c']
            - condition: "$gcp_region == 'us-west3'"
              values: ['us-west3-a', 'us-west3-b', 'us-west3-c']
            - condition: "$gcp_region == 'us-west4'"
              values: ['us-west4-a', 'us-west4-b', 'us-west4-c']
        default: ""
        validations: 
        - regexp: "^[a-z]+-[a-z0-9]+-[a-z]{1}$"
          error_message: "Please enter a valid GCP Zone such as europe-west1-b."
        required: true
{%- endif %}